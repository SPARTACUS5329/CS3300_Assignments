global ascii
dead:
t1 = "This shouldn't print, if it does, you are cooked!!\n"
param1 = t1
call printf
t2 = retval
retval = -1
return
breaks:
ascii_arg = param1
t3 = "This should print first\n"
param1 = t3
call printf
t4 = retval
t5 = '\n'
t6 = 19
ascii_arg[t6] = t5
t7 = '\n'
t8 = 40
ascii_arg[t8] = t7
t9 = '\n'
t10 = 56
ascii_arg[t10] = t9
retval = 0
return
face:
t11 = "This should print third\n"
param1 = t11
call printf
t12 = retval
t13 = '='
t14 = 21
ascii[t14] = t13
t15 = '='
t16 = 27
ascii[t16] = t15
t17 = '.'
t18 = 24
ascii[t18] = t17
t19 = '('
t20 = 20
ascii[t20] = t19
t21 = '^'
t22 = 22
ascii[t22] = t21
t23 = '^'
t24 = 26
ascii[t24] = t23
t25 = ')'
t26 = 28
ascii[t26] = t25
retval = 0
return
bubbleout:
t27 = 18
i = t27
t28 = "This should print fourth\n"
param1 = t28
call printf
t29 = retval
L1:
t30 = i >= 13
if (t30) goto L2
goto L3
L2:
t31 = '_'
t32 = i
ascii[t32] = t31
t33 = i - 1
i = t33
goto L1
L3:
t34 = ')'
t35 = 54
ascii[t35] = t34
t36 = '/'
t37 = 55
ascii[t37] = t36
retval = 0
return
bubbletext:
t38 = "This should print fifth\n"
param1 = t38
call printf
t39 = retval
t40 = '!'
t41 = 37
ascii[t41] = t40
t42 = 'e'
t43 = 34
ascii[t43] = t42
t44 = 'w'
t45 = 36
ascii[t45] = t44
t46 = 'm'
t47 = 33
ascii[t47] = t46
t48 = 'o'
t49 = 35
ascii[t49] = t48
t50 = ')'
t51 = 39
ascii[t51] = t50
t52 = '('
t53 = 32
ascii[t53] = t52
t54 = '_'
t55 = 38
ascii[t55] = t54
retval = 0
return
head:
ascii_arg = param1
t56 = "This should print last\n"
param1 = t56
call printf
t57 = retval
t58 = '/'
t59 = 1
ascii_arg[t59] = t58
t60 = '\\'
t61 = 2
ascii_arg[t61] = t60
t62 = '_'
t63 = 3
ascii_arg[t63] = t62
t64 = '_'
t65 = 4
ascii_arg[t65] = t64
t66 = '/'
t67 = 7
ascii_arg[t67] = t66
t68 = '\\'
t69 = 8
ascii_arg[t69] = t68
t70 = '_'
t71 = 5
ascii_arg[t71] = t70
t72 = '_'
t73 = 6
ascii_arg[t73] = t72
retval = 0
return
paws:
ascii_arg = param1
t74 = "This should print second\n"
param1 = t74
call printf
t75 = retval
t76 = '('
t77 = 42
ascii_arg[t77] = t76
t78 = '('
t79 = 46
ascii_arg[t79] = t78
t80 = ')'
t81 = 44
ascii_arg[t81] = t80
t82 = ')'
t83 = 48
ascii_arg[t83] = t82
t84 = '"'
t85 = 43
ascii_arg[t85] = t84
t86 = '"'
t87 = 47
ascii_arg[t87] = t86
t88 = '_'
t89 = 49
ascii_arg[t89] = t88
t90 = '/'
t91 = 50
ascii_arg[t91] = t90
retval = 0
return
print:
ascii_arg = param1
t92 = "%s"
t93 = ascii_arg
param1 = t92
param2 = t93
call printf
t94 = retval
retval = 0
return
main:
t95 = 56
len = t95
t96 = '\0'
t97 = 57
ascii[t97] = t96
L4:
t98 = len >= 0
if (t98) goto L5
goto L6
L5:
t99 = ' '
t100 = len
ascii[t100] = t99
t101 = len - 1
len = t101
goto L4
L6:
t102 = ascii
param1 = t102
call breaks
t103 = retval
t104 = t103 > 0
if (t104) goto L12
goto L11
L12:
call dead
t105 = retval
t106 = t105 == 0
if (t106) goto L7
goto L11
L11:
t107 = ascii
param1 = t107
call paws
t108 = retval
call face
t109 = retval
t110 = t108 != t109
if (t110) goto L13
goto L10
L13:
call dead
t111 = retval
t112 = t111 == 0
if (t112) goto L7
goto L10
L10:
call bubbleout
t113 = retval
call bubbletext
t114 = retval
t115 = t113 == t114
if (t115) goto L14
goto L9
L14:
t116 = ascii
param1 = t116
call head
t117 = retval
t118 = t117 == 0
if (t118) goto L7
goto L9
L9:
call dead
t119 = retval
t120 = t119 == 0
if (t120) goto L7
goto L8
L7:
t121 = ascii
param1 = t121
call print
t122 = retval
L8:
retval = 0
return
