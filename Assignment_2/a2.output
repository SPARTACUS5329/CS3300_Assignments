Grammar

    0 $accept: program $end

    1 program: functionBlocks mainFunction

    2 functionBlocks: /* empty */
    3               | functionBlocks functionBlock

    4 mainFunction: validType MAIN OPEN_PAREN parameters CLOSE_PAREN body

    5 lines: line
    6      | line lines

    7 line: declarationStatement
    8     | assignment
    9     | expression SEMI_COLON
   10     | returnStatement
   11     | ifStatement
   12     | loopStatement
   13     | functionBlock

   14 declarationStatement: validType declarations SEMI_COLON

   15 declarations: declaration
   16             | declaration COMMA declarations

   17 declaration: assignable EQ expression SEMI_COLON
   18            | assignable

   19 assignment: assignable EQ expression SEMI_COLON

   20 assignable: identifier
   21           | identifier subscripts

   22 subscripts: subscript
   23           | subscript subscripts

   24 subscript: OPEN_SQUARE index CLOSE_SQUARE

   25 functionCall: identifier OPEN_PAREN arguments CLOSE_PAREN

   26 arguments: /* empty */
   27          | argument
   28          | argument COMMA arguments

   29 argument: expression
   30         | STRING

   31 expression: expression PLUS expression
   32           | expression MINUS expression
   33           | expression COMPAR expression
   34           | expression MULTIPLY expression
   35           | expression DIVIDE expression
   36           | expression EXPONENT expression
   37           | MINUS expression
   38           | OPEN_PAREN expression CLOSE_PAREN
   39           | functionCall
   40           | term

   41 functionBlock: validType functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body

   42 functionIdentifier: identifier

   43 returnStatement: RETURN expression SEMI_COLON
   44                | RETURN SEMI_COLON

   45 parameters: /* empty */
   46           | parameter
   47           | parameter COMMA parameters

   48 parameter: validType assignable

   49 ifStatement: IF OPEN_PAREN expression CLOSE_PAREN body ELSE body
   50            | IF OPEN_PAREN expression CLOSE_PAREN body

   51 loopStatement: whileStatement
   52              | forStatement

   53 whileStatement: WHILE OPEN_PAREN expression CLOSE_PAREN body

   54 forStatement: FOR OPEN_PAREN assignment expression SEMI_COLON assignable EQ expression CLOSE_PAREN body

   55 body: line
   56     | OPEN_BRACE lines CLOSE_BRACE

   57 term: identifier
   58     | identifier subscripts
   59     | NUMBER

   60 index: identifier
   61      | NUMBER

   62 validType: VALID_TYPE

   63 identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
OPEN_PAREN (258) 4 25 38 41 49 50 53 54
CLOSE_PAREN (259) 4 25 38 41 49 50 53 54
OPEN_BRACE (260) 56
CLOSE_BRACE (261) 56
OPEN_SQUARE (262) 24
CLOSE_SQUARE (263) 24
COMMA (264) 16 28 47
COMPAR (265) 33
SEMI_COLON (266) 9 14 17 19 43 44 54
EQ (267) 17 19 54
PLUS (268) 31
MINUS (269) 32 37
MULTIPLY (270) 34
DIVIDE (271) 35
EXPONENT (272) 36
VALID_TYPE (273) 62
IDENTIFIER (274) 63
NUMBER (275) 59 61
STRING (276) 30
IF (277) 49 50
ELSE (278) 49
WHILE (279) 53
FOR (280) 54
RETURN (281) 43 44
MAIN (282) 4
UMINUS (283)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
program (30)
    on left: 1, on right: 0
functionBlocks (31)
    on left: 2 3, on right: 1 3
mainFunction (32)
    on left: 4, on right: 1
lines (33)
    on left: 5 6, on right: 6 56
line (34)
    on left: 7 8 9 10 11 12 13, on right: 5 6 55
declarationStatement (35)
    on left: 14, on right: 7
declarations (36)
    on left: 15 16, on right: 14 16
declaration (37)
    on left: 17 18, on right: 15 16
assignment (38)
    on left: 19, on right: 8 54
assignable (39)
    on left: 20 21, on right: 17 18 19 48 54
subscripts (40)
    on left: 22 23, on right: 21 23 58
subscript (41)
    on left: 24, on right: 22 23
functionCall (42)
    on left: 25, on right: 39
arguments (43)
    on left: 26 27 28, on right: 25 28
argument (44)
    on left: 29 30, on right: 27 28
expression (45)
    on left: 31 32 33 34 35 36 37 38 39 40, on right: 9 17 19 29 31
    32 33 34 35 36 37 38 43 49 50 53 54
functionBlock (46)
    on left: 41, on right: 3 13
functionIdentifier (47)
    on left: 42, on right: 41
returnStatement (48)
    on left: 43 44, on right: 10
parameters (49)
    on left: 45 46 47, on right: 4 41 47
parameter (50)
    on left: 48, on right: 46 47
ifStatement (51)
    on left: 49 50, on right: 11
loopStatement (52)
    on left: 51 52, on right: 12
whileStatement (53)
    on left: 53, on right: 51
forStatement (54)
    on left: 54, on right: 52
body (55)
    on left: 55 56, on right: 4 41 49 50 53 54
term (56)
    on left: 57 58 59, on right: 40
index (57)
    on left: 60 61, on right: 24
validType (58)
    on left: 62, on right: 4 14 41 48
identifier (59)
    on left: 63, on right: 20 21 25 42 57 58 60


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (functionBlocks)

    program         go to state 1
    functionBlocks  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: functionBlocks . mainFunction
    3 functionBlocks: functionBlocks . functionBlock

    VALID_TYPE  shift, and go to state 4

    mainFunction   go to state 5
    functionBlock  go to state 6
    validType      go to state 7


state 3

    0 $accept: program $end .

    $default  accept


state 4

   62 validType: VALID_TYPE .

    $default  reduce using rule 62 (validType)


state 5

    1 program: functionBlocks mainFunction .

    $default  reduce using rule 1 (program)


state 6

    3 functionBlocks: functionBlocks functionBlock .

    $default  reduce using rule 3 (functionBlocks)


state 7

    4 mainFunction: validType . MAIN OPEN_PAREN parameters CLOSE_PAREN body
   41 functionBlock: validType . functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9

    functionIdentifier  go to state 10
    identifier          go to state 11


state 8

   63 identifier: IDENTIFIER .

    $default  reduce using rule 63 (identifier)


state 9

    4 mainFunction: validType MAIN . OPEN_PAREN parameters CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 12


state 10

   41 functionBlock: validType functionIdentifier . OPEN_PAREN parameters CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 13


state 11

   42 functionIdentifier: identifier .

    $default  reduce using rule 42 (functionIdentifier)


state 12

    4 mainFunction: validType MAIN OPEN_PAREN . parameters CLOSE_PAREN body

    VALID_TYPE  shift, and go to state 4

    $default  reduce using rule 45 (parameters)

    parameters  go to state 14
    parameter   go to state 15
    validType   go to state 16


state 13

   41 functionBlock: validType functionIdentifier OPEN_PAREN . parameters CLOSE_PAREN body

    VALID_TYPE  shift, and go to state 4

    $default  reduce using rule 45 (parameters)

    parameters  go to state 17
    parameter   go to state 15
    validType   go to state 16


state 14

    4 mainFunction: validType MAIN OPEN_PAREN parameters . CLOSE_PAREN body

    CLOSE_PAREN  shift, and go to state 18


state 15

   46 parameters: parameter .
   47           | parameter . COMMA parameters

    COMMA  shift, and go to state 19

    $default  reduce using rule 46 (parameters)


state 16

   48 parameter: validType . assignable

    IDENTIFIER  shift, and go to state 8

    assignable  go to state 20
    identifier  go to state 21


state 17

   41 functionBlock: validType functionIdentifier OPEN_PAREN parameters . CLOSE_PAREN body

    CLOSE_PAREN  shift, and go to state 22


state 18

    4 mainFunction: validType MAIN OPEN_PAREN parameters CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 23
    OPEN_BRACE  shift, and go to state 24
    MINUS       shift, and go to state 25
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    FOR         shift, and go to state 29
    RETURN      shift, and go to state 30

    line                  go to state 31
    declarationStatement  go to state 32
    assignment            go to state 33
    assignable            go to state 34
    functionCall          go to state 35
    expression            go to state 36
    functionBlock         go to state 37
    returnStatement       go to state 38
    ifStatement           go to state 39
    loopStatement         go to state 40
    whileStatement        go to state 41
    forStatement          go to state 42
    body                  go to state 43
    term                  go to state 44
    validType             go to state 45
    identifier            go to state 46


state 19

   47 parameters: parameter COMMA . parameters

    VALID_TYPE  shift, and go to state 4

    $default  reduce using rule 45 (parameters)

    parameters  go to state 47
    parameter   go to state 15
    validType   go to state 16


state 20

   48 parameter: validType assignable .

    $default  reduce using rule 48 (parameter)


state 21

   20 assignable: identifier .
   21           | identifier . subscripts

    OPEN_SQUARE  shift, and go to state 48

    $default  reduce using rule 20 (assignable)

    subscripts  go to state 49
    subscript   go to state 50


state 22

   41 functionBlock: validType functionIdentifier OPEN_PAREN parameters CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 23
    OPEN_BRACE  shift, and go to state 24
    MINUS       shift, and go to state 25
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    FOR         shift, and go to state 29
    RETURN      shift, and go to state 30

    line                  go to state 31
    declarationStatement  go to state 32
    assignment            go to state 33
    assignable            go to state 34
    functionCall          go to state 35
    expression            go to state 36
    functionBlock         go to state 37
    returnStatement       go to state 38
    ifStatement           go to state 39
    loopStatement         go to state 40
    whileStatement        go to state 41
    forStatement          go to state 42
    body                  go to state 51
    term                  go to state 44
    validType             go to state 45
    identifier            go to state 46


state 23

   38 expression: OPEN_PAREN . expression CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 52
    term          go to state 44
    identifier    go to state 53


state 24

   56 body: OPEN_BRACE . lines CLOSE_BRACE

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    FOR         shift, and go to state 29
    RETURN      shift, and go to state 30

    lines                 go to state 54
    line                  go to state 55
    declarationStatement  go to state 32
    assignment            go to state 33
    assignable            go to state 34
    functionCall          go to state 35
    expression            go to state 36
    functionBlock         go to state 37
    returnStatement       go to state 38
    ifStatement           go to state 39
    loopStatement         go to state 40
    whileStatement        go to state 41
    forStatement          go to state 42
    term                  go to state 44
    validType             go to state 45
    identifier            go to state 46


state 25

   37 expression: MINUS . expression

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 56
    term          go to state 44
    identifier    go to state 53


state 26

   59 term: NUMBER .

    $default  reduce using rule 59 (term)


state 27

   49 ifStatement: IF . OPEN_PAREN expression CLOSE_PAREN body ELSE body
   50            | IF . OPEN_PAREN expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 57


state 28

   53 whileStatement: WHILE . OPEN_PAREN expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 58


state 29

   54 forStatement: FOR . OPEN_PAREN assignment expression SEMI_COLON assignable EQ expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 59


state 30

   43 returnStatement: RETURN . expression SEMI_COLON
   44                | RETURN . SEMI_COLON

    OPEN_PAREN  shift, and go to state 23
    SEMI_COLON  shift, and go to state 60
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 61
    term          go to state 44
    identifier    go to state 53


state 31

   55 body: line .

    $default  reduce using rule 55 (body)


state 32

    7 line: declarationStatement .

    $default  reduce using rule 7 (line)


state 33

    8 line: assignment .

    $default  reduce using rule 8 (line)


state 34

   19 assignment: assignable . EQ expression SEMI_COLON

    EQ  shift, and go to state 62


state 35

   39 expression: functionCall .

    $default  reduce using rule 39 (expression)


state 36

    9 line: expression . SEMI_COLON
   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression

    COMPAR      shift, and go to state 63
    SEMI_COLON  shift, and go to state 64
    PLUS        shift, and go to state 65
    MINUS       shift, and go to state 66
    MULTIPLY    shift, and go to state 67
    DIVIDE      shift, and go to state 68
    EXPONENT    shift, and go to state 69


state 37

   13 line: functionBlock .

    $default  reduce using rule 13 (line)


state 38

   10 line: returnStatement .

    $default  reduce using rule 10 (line)


state 39

   11 line: ifStatement .

    $default  reduce using rule 11 (line)


state 40

   12 line: loopStatement .

    $default  reduce using rule 12 (line)


state 41

   51 loopStatement: whileStatement .

    $default  reduce using rule 51 (loopStatement)


state 42

   52 loopStatement: forStatement .

    $default  reduce using rule 52 (loopStatement)


state 43

    4 mainFunction: validType MAIN OPEN_PAREN parameters CLOSE_PAREN body .

    $default  reduce using rule 4 (mainFunction)


state 44

   40 expression: term .

    $default  reduce using rule 40 (expression)


state 45

   14 declarationStatement: validType . declarations SEMI_COLON
   41 functionBlock: validType . functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 8

    declarations        go to state 70
    declaration         go to state 71
    assignable          go to state 72
    functionIdentifier  go to state 10
    identifier          go to state 73


state 46

   20 assignable: identifier .
   21           | identifier . subscripts
   25 functionCall: identifier . OPEN_PAREN arguments CLOSE_PAREN
   57 term: identifier .
   58     | identifier . subscripts

    OPEN_PAREN   shift, and go to state 74
    OPEN_SQUARE  shift, and go to state 48

    EQ        reduce using rule 20 (assignable)
    $default  reduce using rule 57 (term)

    subscripts  go to state 75
    subscript   go to state 50


state 47

   47 parameters: parameter COMMA parameters .

    $default  reduce using rule 47 (parameters)


state 48

   24 subscript: OPEN_SQUARE . index CLOSE_SQUARE

    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 76

    index       go to state 77
    identifier  go to state 78


state 49

   21 assignable: identifier subscripts .

    $default  reduce using rule 21 (assignable)


state 50

   22 subscripts: subscript .
   23           | subscript . subscripts

    OPEN_SQUARE  shift, and go to state 48

    $default  reduce using rule 22 (subscripts)

    subscripts  go to state 79
    subscript   go to state 50


state 51

   41 functionBlock: validType functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body .

    $default  reduce using rule 41 (functionBlock)


state 52

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression
   38           | OPEN_PAREN expression . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 80
    COMPAR       shift, and go to state 63
    PLUS         shift, and go to state 65
    MINUS        shift, and go to state 66
    MULTIPLY     shift, and go to state 67
    DIVIDE       shift, and go to state 68
    EXPONENT     shift, and go to state 69


state 53

   25 functionCall: identifier . OPEN_PAREN arguments CLOSE_PAREN
   57 term: identifier .
   58     | identifier . subscripts

    OPEN_PAREN   shift, and go to state 74
    OPEN_SQUARE  shift, and go to state 48

    $default  reduce using rule 57 (term)

    subscripts  go to state 81
    subscript   go to state 50


state 54

   56 body: OPEN_BRACE lines . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 82


state 55

    5 lines: line .
    6      | line . lines

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    FOR         shift, and go to state 29
    RETURN      shift, and go to state 30

    $default  reduce using rule 5 (lines)

    lines                 go to state 83
    line                  go to state 55
    declarationStatement  go to state 32
    assignment            go to state 33
    assignable            go to state 34
    functionCall          go to state 35
    expression            go to state 36
    functionBlock         go to state 37
    returnStatement       go to state 38
    ifStatement           go to state 39
    loopStatement         go to state 40
    whileStatement        go to state 41
    forStatement          go to state 42
    term                  go to state 44
    validType             go to state 45
    identifier            go to state 46


state 56

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression
   37           | MINUS expression .

    EXPONENT  shift, and go to state 69

    $default  reduce using rule 37 (expression)


state 57

   49 ifStatement: IF OPEN_PAREN . expression CLOSE_PAREN body ELSE body
   50            | IF OPEN_PAREN . expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 84
    term          go to state 44
    identifier    go to state 53


state 58

   53 whileStatement: WHILE OPEN_PAREN . expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 85
    term          go to state 44
    identifier    go to state 53


state 59

   54 forStatement: FOR OPEN_PAREN . assignment expression SEMI_COLON assignable EQ expression CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 8

    assignment  go to state 86
    assignable  go to state 34
    identifier  go to state 21


state 60

   44 returnStatement: RETURN SEMI_COLON .

    $default  reduce using rule 44 (returnStatement)


state 61

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression
   43 returnStatement: RETURN expression . SEMI_COLON

    COMPAR      shift, and go to state 63
    SEMI_COLON  shift, and go to state 87
    PLUS        shift, and go to state 65
    MINUS       shift, and go to state 66
    MULTIPLY    shift, and go to state 67
    DIVIDE      shift, and go to state 68
    EXPONENT    shift, and go to state 69


state 62

   19 assignment: assignable EQ . expression SEMI_COLON

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 88
    term          go to state 44
    identifier    go to state 53


state 63

   33 expression: expression COMPAR . expression

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 89
    term          go to state 44
    identifier    go to state 53


state 64

    9 line: expression SEMI_COLON .

    $default  reduce using rule 9 (line)


state 65

   31 expression: expression PLUS . expression

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 90
    term          go to state 44
    identifier    go to state 53


state 66

   32 expression: expression MINUS . expression

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 91
    term          go to state 44
    identifier    go to state 53


state 67

   34 expression: expression MULTIPLY . expression

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 92
    term          go to state 44
    identifier    go to state 53


state 68

   35 expression: expression DIVIDE . expression

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 93
    term          go to state 44
    identifier    go to state 53


state 69

   36 expression: expression EXPONENT . expression

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 94
    term          go to state 44
    identifier    go to state 53


state 70

   14 declarationStatement: validType declarations . SEMI_COLON

    SEMI_COLON  shift, and go to state 95


state 71

   15 declarations: declaration .
   16             | declaration . COMMA declarations

    COMMA  shift, and go to state 96

    $default  reduce using rule 15 (declarations)


state 72

   17 declaration: assignable . EQ expression SEMI_COLON
   18            | assignable .

    EQ  shift, and go to state 97

    $default  reduce using rule 18 (declaration)


state 73

   20 assignable: identifier .
   21           | identifier . subscripts
   42 functionIdentifier: identifier .

    OPEN_SQUARE  shift, and go to state 48

    OPEN_PAREN  reduce using rule 42 (functionIdentifier)
    $default    reduce using rule 20 (assignable)

    subscripts  go to state 49
    subscript   go to state 50


state 74

   25 functionCall: identifier OPEN_PAREN . arguments CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    STRING      shift, and go to state 98

    $default  reduce using rule 26 (arguments)

    functionCall  go to state 35
    arguments     go to state 99
    argument      go to state 100
    expression    go to state 101
    term          go to state 44
    identifier    go to state 53


state 75

   21 assignable: identifier subscripts .
   58 term: identifier subscripts .

    EQ        reduce using rule 21 (assignable)
    $default  reduce using rule 58 (term)


state 76

   61 index: NUMBER .

    $default  reduce using rule 61 (index)


state 77

   24 subscript: OPEN_SQUARE index . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 102


state 78

   60 index: identifier .

    $default  reduce using rule 60 (index)


state 79

   23 subscripts: subscript subscripts .

    $default  reduce using rule 23 (subscripts)


state 80

   38 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 38 (expression)


state 81

   58 term: identifier subscripts .

    $default  reduce using rule 58 (term)


state 82

   56 body: OPEN_BRACE lines CLOSE_BRACE .

    $default  reduce using rule 56 (body)


state 83

    6 lines: line lines .

    $default  reduce using rule 6 (lines)


state 84

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression
   49 ifStatement: IF OPEN_PAREN expression . CLOSE_PAREN body ELSE body
   50            | IF OPEN_PAREN expression . CLOSE_PAREN body

    CLOSE_PAREN  shift, and go to state 103
    COMPAR       shift, and go to state 63
    PLUS         shift, and go to state 65
    MINUS        shift, and go to state 66
    MULTIPLY     shift, and go to state 67
    DIVIDE       shift, and go to state 68
    EXPONENT     shift, and go to state 69


state 85

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression
   53 whileStatement: WHILE OPEN_PAREN expression . CLOSE_PAREN body

    CLOSE_PAREN  shift, and go to state 104
    COMPAR       shift, and go to state 63
    PLUS         shift, and go to state 65
    MINUS        shift, and go to state 66
    MULTIPLY     shift, and go to state 67
    DIVIDE       shift, and go to state 68
    EXPONENT     shift, and go to state 69


state 86

   54 forStatement: FOR OPEN_PAREN assignment . expression SEMI_COLON assignable EQ expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 105
    term          go to state 44
    identifier    go to state 53


state 87

   43 returnStatement: RETURN expression SEMI_COLON .

    $default  reduce using rule 43 (returnStatement)


state 88

   19 assignment: assignable EQ expression . SEMI_COLON
   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression

    COMPAR      shift, and go to state 63
    SEMI_COLON  shift, and go to state 106
    PLUS        shift, and go to state 65
    MINUS       shift, and go to state 66
    MULTIPLY    shift, and go to state 67
    DIVIDE      shift, and go to state 68
    EXPONENT    shift, and go to state 69


state 89

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   33           | expression COMPAR expression .
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression

    MULTIPLY  shift, and go to state 67
    DIVIDE    shift, and go to state 68
    EXPONENT  shift, and go to state 69

    $default  reduce using rule 33 (expression)


state 90

   31 expression: expression . PLUS expression
   31           | expression PLUS expression .
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression

    MULTIPLY  shift, and go to state 67
    DIVIDE    shift, and go to state 68
    EXPONENT  shift, and go to state 69

    $default  reduce using rule 31 (expression)


state 91

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   32           | expression MINUS expression .
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression

    MULTIPLY  shift, and go to state 67
    DIVIDE    shift, and go to state 68
    EXPONENT  shift, and go to state 69

    $default  reduce using rule 32 (expression)


state 92

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   34           | expression MULTIPLY expression .
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression

    EXPONENT  shift, and go to state 69

    $default  reduce using rule 34 (expression)


state 93

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   35           | expression DIVIDE expression .
   36           | expression . EXPONENT expression

    EXPONENT  shift, and go to state 69

    $default  reduce using rule 35 (expression)


state 94

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression
   36           | expression EXPONENT expression .

    EXPONENT  shift, and go to state 69

    $default  reduce using rule 36 (expression)


state 95

   14 declarationStatement: validType declarations SEMI_COLON .

    $default  reduce using rule 14 (declarationStatement)


state 96

   16 declarations: declaration COMMA . declarations

    IDENTIFIER  shift, and go to state 8

    declarations  go to state 107
    declaration   go to state 71
    assignable    go to state 72
    identifier    go to state 21


state 97

   17 declaration: assignable EQ . expression SEMI_COLON

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 108
    term          go to state 44
    identifier    go to state 53


state 98

   30 argument: STRING .

    $default  reduce using rule 30 (argument)


state 99

   25 functionCall: identifier OPEN_PAREN arguments . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 109


state 100

   27 arguments: argument .
   28          | argument . COMMA arguments

    COMMA  shift, and go to state 110

    $default  reduce using rule 27 (arguments)


state 101

   29 argument: expression .
   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression

    COMPAR    shift, and go to state 63
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    MULTIPLY  shift, and go to state 67
    DIVIDE    shift, and go to state 68
    EXPONENT  shift, and go to state 69

    $default  reduce using rule 29 (argument)


state 102

   24 subscript: OPEN_SQUARE index CLOSE_SQUARE .

    $default  reduce using rule 24 (subscript)


state 103

   49 ifStatement: IF OPEN_PAREN expression CLOSE_PAREN . body ELSE body
   50            | IF OPEN_PAREN expression CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 23
    OPEN_BRACE  shift, and go to state 24
    MINUS       shift, and go to state 25
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    FOR         shift, and go to state 29
    RETURN      shift, and go to state 30

    line                  go to state 31
    declarationStatement  go to state 32
    assignment            go to state 33
    assignable            go to state 34
    functionCall          go to state 35
    expression            go to state 36
    functionBlock         go to state 37
    returnStatement       go to state 38
    ifStatement           go to state 39
    loopStatement         go to state 40
    whileStatement        go to state 41
    forStatement          go to state 42
    body                  go to state 111
    term                  go to state 44
    validType             go to state 45
    identifier            go to state 46


state 104

   53 whileStatement: WHILE OPEN_PAREN expression CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 23
    OPEN_BRACE  shift, and go to state 24
    MINUS       shift, and go to state 25
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    FOR         shift, and go to state 29
    RETURN      shift, and go to state 30

    line                  go to state 31
    declarationStatement  go to state 32
    assignment            go to state 33
    assignable            go to state 34
    functionCall          go to state 35
    expression            go to state 36
    functionBlock         go to state 37
    returnStatement       go to state 38
    ifStatement           go to state 39
    loopStatement         go to state 40
    whileStatement        go to state 41
    forStatement          go to state 42
    body                  go to state 112
    term                  go to state 44
    validType             go to state 45
    identifier            go to state 46


state 105

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression
   54 forStatement: FOR OPEN_PAREN assignment expression . SEMI_COLON assignable EQ expression CLOSE_PAREN body

    COMPAR      shift, and go to state 63
    SEMI_COLON  shift, and go to state 113
    PLUS        shift, and go to state 65
    MINUS       shift, and go to state 66
    MULTIPLY    shift, and go to state 67
    DIVIDE      shift, and go to state 68
    EXPONENT    shift, and go to state 69


state 106

   19 assignment: assignable EQ expression SEMI_COLON .

    $default  reduce using rule 19 (assignment)


state 107

   16 declarations: declaration COMMA declarations .

    $default  reduce using rule 16 (declarations)


state 108

   17 declaration: assignable EQ expression . SEMI_COLON
   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression

    COMPAR      shift, and go to state 63
    SEMI_COLON  shift, and go to state 114
    PLUS        shift, and go to state 65
    MINUS       shift, and go to state 66
    MULTIPLY    shift, and go to state 67
    DIVIDE      shift, and go to state 68
    EXPONENT    shift, and go to state 69


state 109

   25 functionCall: identifier OPEN_PAREN arguments CLOSE_PAREN .

    $default  reduce using rule 25 (functionCall)


state 110

   28 arguments: argument COMMA . arguments

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    STRING      shift, and go to state 98

    $default  reduce using rule 26 (arguments)

    functionCall  go to state 35
    arguments     go to state 115
    argument      go to state 100
    expression    go to state 101
    term          go to state 44
    identifier    go to state 53


state 111

   49 ifStatement: IF OPEN_PAREN expression CLOSE_PAREN body . ELSE body
   50            | IF OPEN_PAREN expression CLOSE_PAREN body .

    ELSE  shift, and go to state 116

    $default  reduce using rule 50 (ifStatement)


state 112

   53 whileStatement: WHILE OPEN_PAREN expression CLOSE_PAREN body .

    $default  reduce using rule 53 (whileStatement)


state 113

   54 forStatement: FOR OPEN_PAREN assignment expression SEMI_COLON . assignable EQ expression CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 8

    assignable  go to state 117
    identifier  go to state 21


state 114

   17 declaration: assignable EQ expression SEMI_COLON .

    $default  reduce using rule 17 (declaration)


state 115

   28 arguments: argument COMMA arguments .

    $default  reduce using rule 28 (arguments)


state 116

   49 ifStatement: IF OPEN_PAREN expression CLOSE_PAREN body ELSE . body

    OPEN_PAREN  shift, and go to state 23
    OPEN_BRACE  shift, and go to state 24
    MINUS       shift, and go to state 25
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    FOR         shift, and go to state 29
    RETURN      shift, and go to state 30

    line                  go to state 31
    declarationStatement  go to state 32
    assignment            go to state 33
    assignable            go to state 34
    functionCall          go to state 35
    expression            go to state 36
    functionBlock         go to state 37
    returnStatement       go to state 38
    ifStatement           go to state 39
    loopStatement         go to state 40
    whileStatement        go to state 41
    forStatement          go to state 42
    body                  go to state 118
    term                  go to state 44
    validType             go to state 45
    identifier            go to state 46


state 117

   54 forStatement: FOR OPEN_PAREN assignment expression SEMI_COLON assignable . EQ expression CLOSE_PAREN body

    EQ  shift, and go to state 119


state 118

   49 ifStatement: IF OPEN_PAREN expression CLOSE_PAREN body ELSE body .

    $default  reduce using rule 49 (ifStatement)


state 119

   54 forStatement: FOR OPEN_PAREN assignment expression SEMI_COLON assignable EQ . expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 23
    MINUS       shift, and go to state 25
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26

    functionCall  go to state 35
    expression    go to state 120
    term          go to state 44
    identifier    go to state 53


state 120

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . COMPAR expression
   34           | expression . MULTIPLY expression
   35           | expression . DIVIDE expression
   36           | expression . EXPONENT expression
   54 forStatement: FOR OPEN_PAREN assignment expression SEMI_COLON assignable EQ expression . CLOSE_PAREN body

    CLOSE_PAREN  shift, and go to state 121
    COMPAR       shift, and go to state 63
    PLUS         shift, and go to state 65
    MINUS        shift, and go to state 66
    MULTIPLY     shift, and go to state 67
    DIVIDE       shift, and go to state 68
    EXPONENT     shift, and go to state 69


state 121

   54 forStatement: FOR OPEN_PAREN assignment expression SEMI_COLON assignable EQ expression CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 23
    OPEN_BRACE  shift, and go to state 24
    MINUS       shift, and go to state 25
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 8
    NUMBER      shift, and go to state 26
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    FOR         shift, and go to state 29
    RETURN      shift, and go to state 30

    line                  go to state 31
    declarationStatement  go to state 32
    assignment            go to state 33
    assignable            go to state 34
    functionCall          go to state 35
    expression            go to state 36
    functionBlock         go to state 37
    returnStatement       go to state 38
    ifStatement           go to state 39
    loopStatement         go to state 40
    whileStatement        go to state 41
    forStatement          go to state 42
    body                  go to state 122
    term                  go to state 44
    validType             go to state 45
    identifier            go to state 46


state 122

   54 forStatement: FOR OPEN_PAREN assignment expression SEMI_COLON assignable EQ expression CLOSE_PAREN body .

    $default  reduce using rule 54 (forStatement)
