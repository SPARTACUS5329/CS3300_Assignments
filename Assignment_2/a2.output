Grammar

    0 $accept: program $end

    1 program: globalDeclarations functionDefinitions

    2 globalDeclarations: /* empty */
    3                   | globalDeclarations declarationStatement

    4 functionDefinitions: functionDefinition functionDefinitions
    5                    | mainFunction

    6 mainFunction: validType mainIdentifier OPEN_PAREN parameters CLOSE_PAREN body

    7 mainIdentifier: MAIN

    8 lines: line
    9      | lines line

   10 line: declarationStatement
   11     | assignmentStatement
   12     | expression SEMI_COLON
   13     | returnStatement
   14     | ifStatement
   15     | loopStatement
   16     | functionDefinition

   17 declarationStatement: validType declarations SEMI_COLON

   18 declarations: declaration
   19             | declaration COMMA declarations

   20 declaration: assignable EQ expression
   21            | assignable

   22 assignmentStatement: assignable EQ expression SEMI_COLON

   23 assignable: identifier
   24           | identifier subscripts

   25 subscripts: subscript
   26           | subscript subscripts

   27 subscript: OPEN_SQUARE index CLOSE_SQUARE

   28 functionCall: identifier OPEN_PAREN arguments CLOSE_PAREN

   29 arguments: argument
   30          | arguments COMMA argument
   31          | /* empty */

   32 argument: expression
   33         | STRING_TOK

   34 expression: expression PLUS_TOK expression
   35           | expression MINUS_TOK expression
   36           | expression MULTIPLY_TOK expression
   37           | expression DIVIDE_TOK expression
   38           | expression EXPONENT_TOK expression
   39           | MINUS_TOK expression
   40           | OPEN_PAREN expression CLOSE_PAREN
   41           | functionCall
   42           | term

   43 functionDefinition: validType functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body

   44 functionIdentifier: identifier

   45 returnStatement: RETURN_TOK expression SEMI_COLON
   46                | RETURN_TOK SEMI_COLON

   47 parameters: parameter
   48           | parameters COMMA parameter
   49           | /* empty */

   50 parameter: validType assignable

   51 ifStatement: IF_TOK OPEN_PAREN condition CLOSE_PAREN body ELSE_TOK body
   52            | IF_TOK OPEN_PAREN condition CLOSE_PAREN body

   53 condition: condition SHORT_AND_TOK condition
   54          | condition SHORT_OR_TOK condition
   55          | NOT_TOK condition
   56          | OPEN_PAREN condition CLOSE_PAREN
   57          | expression compar expression

   58 loopStatement: whileStatement
   59              | forStatement

   60 whileStatement: WHILE_TOK OPEN_PAREN condition CLOSE_PAREN body

   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement condition SEMI_COLON assignable EQ expression CLOSE_PAREN body

   62 body: line
   63     | OPEN_BRACE lines CLOSE_BRACE

   64 term: identifier
   65     | identifier subscripts
   66     | NUMBER

   67 index: identifier
   68      | NUMBER

   69 compar: COMPAR

   70 validType: VALID_TYPE

   71 identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
OPEN_PAREN (258) 6 28 40 43 51 52 56 60 61
CLOSE_PAREN (259) 6 28 40 43 51 52 56 60 61
OPEN_BRACE (260) 63
CLOSE_BRACE (261) 63
OPEN_SQUARE (262) 27
CLOSE_SQUARE (263) 27
COMMA (264) 19 30 48
COMPAR (265) 69
SEMI_COLON (266) 12 17 22 45 46 61
EQ (267) 20 22 61
PLUS_TOK (268) 34
MINUS_TOK (269) 35 39
MULTIPLY_TOK (270) 36
DIVIDE_TOK (271) 37
EXPONENT_TOK (272) 38
VALID_TYPE (273) 70
IDENTIFIER (274) 71
NUMBER (275) 66 68
STRING_TOK (276) 33
SHORT_AND_TOK (277) 53
SHORT_OR_TOK (278) 54
NOT_TOK (279) 55
IF_TOK (280) 51 52
ELSE_TOK (281) 51
WHILE_TOK (282) 60
FOR_TOK (283) 61
RETURN_TOK (284) 45 46
MAIN (285) 7
UMINUS (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
globalDeclarations (34)
    on left: 2 3, on right: 1 3
functionDefinitions (35)
    on left: 4 5, on right: 1 4
mainFunction (36)
    on left: 6, on right: 5
mainIdentifier (37)
    on left: 7, on right: 6
lines (38)
    on left: 8 9, on right: 9 63
line (39)
    on left: 10 11 12 13 14 15 16, on right: 8 9 62
declarationStatement (40)
    on left: 17, on right: 3 10
declarations (41)
    on left: 18 19, on right: 17 19
declaration (42)
    on left: 20 21, on right: 18 19
assignmentStatement (43)
    on left: 22, on right: 11 61
assignable (44)
    on left: 23 24, on right: 20 21 22 50 61
subscripts (45)
    on left: 25 26, on right: 24 26 65
subscript (46)
    on left: 27, on right: 25 26
functionCall (47)
    on left: 28, on right: 41
arguments (48)
    on left: 29 30 31, on right: 28 30
argument (49)
    on left: 32 33, on right: 29 30
expression (50)
    on left: 34 35 36 37 38 39 40 41 42, on right: 12 20 22 32 34 35
    36 37 38 39 40 45 57 61
functionDefinition (51)
    on left: 43, on right: 4 16
functionIdentifier (52)
    on left: 44, on right: 43
returnStatement (53)
    on left: 45 46, on right: 13
parameters (54)
    on left: 47 48 49, on right: 6 43 48
parameter (55)
    on left: 50, on right: 47 48
ifStatement (56)
    on left: 51 52, on right: 14
condition (57)
    on left: 53 54 55 56 57, on right: 51 52 53 54 55 56 60 61
loopStatement (58)
    on left: 58 59, on right: 15
whileStatement (59)
    on left: 60, on right: 58
forStatement (60)
    on left: 61, on right: 59
body (61)
    on left: 62 63, on right: 6 43 51 52 60 61
term (62)
    on left: 64 65 66, on right: 42
index (63)
    on left: 67 68, on right: 27
compar (64)
    on left: 69, on right: 57
validType (65)
    on left: 70, on right: 6 17 43 50
identifier (66)
    on left: 71, on right: 23 24 28 44 64 65 67


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (globalDeclarations)

    program             go to state 1
    globalDeclarations  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: globalDeclarations . functionDefinitions
    3 globalDeclarations: globalDeclarations . declarationStatement

    VALID_TYPE  shift, and go to state 4

    functionDefinitions   go to state 5
    mainFunction          go to state 6
    declarationStatement  go to state 7
    functionDefinition    go to state 8
    validType             go to state 9


state 3

    0 $accept: program $end .

    $default  accept


state 4

   70 validType: VALID_TYPE .

    $default  reduce using rule 70 (validType)


state 5

    1 program: globalDeclarations functionDefinitions .

    $default  reduce using rule 1 (program)


state 6

    5 functionDefinitions: mainFunction .

    $default  reduce using rule 5 (functionDefinitions)


state 7

    3 globalDeclarations: globalDeclarations declarationStatement .

    $default  reduce using rule 3 (globalDeclarations)


state 8

    4 functionDefinitions: functionDefinition . functionDefinitions

    VALID_TYPE  shift, and go to state 4

    functionDefinitions  go to state 10
    mainFunction         go to state 6
    functionDefinition   go to state 8
    validType            go to state 11


state 9

    6 mainFunction: validType . mainIdentifier OPEN_PAREN parameters CLOSE_PAREN body
   17 declarationStatement: validType . declarations SEMI_COLON
   43 functionDefinition: validType . functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 12
    MAIN        shift, and go to state 13

    mainIdentifier      go to state 14
    declarations        go to state 15
    declaration         go to state 16
    assignable          go to state 17
    functionIdentifier  go to state 18
    identifier          go to state 19


state 10

    4 functionDefinitions: functionDefinition functionDefinitions .

    $default  reduce using rule 4 (functionDefinitions)


state 11

    6 mainFunction: validType . mainIdentifier OPEN_PAREN parameters CLOSE_PAREN body
   43 functionDefinition: validType . functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 12
    MAIN        shift, and go to state 13

    mainIdentifier      go to state 14
    functionIdentifier  go to state 18
    identifier          go to state 20


state 12

   71 identifier: IDENTIFIER .

    $default  reduce using rule 71 (identifier)


state 13

    7 mainIdentifier: MAIN .

    $default  reduce using rule 7 (mainIdentifier)


state 14

    6 mainFunction: validType mainIdentifier . OPEN_PAREN parameters CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 21


state 15

   17 declarationStatement: validType declarations . SEMI_COLON

    SEMI_COLON  shift, and go to state 22


state 16

   18 declarations: declaration .
   19             | declaration . COMMA declarations

    COMMA  shift, and go to state 23

    $default  reduce using rule 18 (declarations)


state 17

   20 declaration: assignable . EQ expression
   21            | assignable .

    EQ  shift, and go to state 24

    $default  reduce using rule 21 (declaration)


state 18

   43 functionDefinition: validType functionIdentifier . OPEN_PAREN parameters CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 25


state 19

   23 assignable: identifier .
   24           | identifier . subscripts
   44 functionIdentifier: identifier .

    OPEN_SQUARE  shift, and go to state 26

    OPEN_PAREN  reduce using rule 44 (functionIdentifier)
    $default    reduce using rule 23 (assignable)

    subscripts  go to state 27
    subscript   go to state 28


state 20

   44 functionIdentifier: identifier .

    $default  reduce using rule 44 (functionIdentifier)


state 21

    6 mainFunction: validType mainIdentifier OPEN_PAREN . parameters CLOSE_PAREN body

    VALID_TYPE  shift, and go to state 4

    $default  reduce using rule 49 (parameters)

    parameters  go to state 29
    parameter   go to state 30
    validType   go to state 31


state 22

   17 declarationStatement: validType declarations SEMI_COLON .

    $default  reduce using rule 17 (declarationStatement)


state 23

   19 declarations: declaration COMMA . declarations

    IDENTIFIER  shift, and go to state 12

    declarations  go to state 32
    declaration   go to state 16
    assignable    go to state 17
    identifier    go to state 33


state 24

   20 declaration: assignable EQ . expression

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 38
    term          go to state 39
    identifier    go to state 40


state 25

   43 functionDefinition: validType functionIdentifier OPEN_PAREN . parameters CLOSE_PAREN body

    VALID_TYPE  shift, and go to state 4

    $default  reduce using rule 49 (parameters)

    parameters  go to state 41
    parameter   go to state 30
    validType   go to state 31


state 26

   27 subscript: OPEN_SQUARE . index CLOSE_SQUARE

    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 42

    index       go to state 43
    identifier  go to state 44


state 27

   24 assignable: identifier subscripts .

    $default  reduce using rule 24 (assignable)


state 28

   25 subscripts: subscript .
   26           | subscript . subscripts

    OPEN_SQUARE  shift, and go to state 26

    $default  reduce using rule 25 (subscripts)

    subscripts  go to state 45
    subscript   go to state 28


state 29

    6 mainFunction: validType mainIdentifier OPEN_PAREN parameters . CLOSE_PAREN body
   48 parameters: parameters . COMMA parameter

    CLOSE_PAREN  shift, and go to state 46
    COMMA        shift, and go to state 47


state 30

   47 parameters: parameter .

    $default  reduce using rule 47 (parameters)


state 31

   50 parameter: validType . assignable

    IDENTIFIER  shift, and go to state 12

    assignable  go to state 48
    identifier  go to state 33


state 32

   19 declarations: declaration COMMA declarations .

    $default  reduce using rule 19 (declarations)


state 33

   23 assignable: identifier .
   24           | identifier . subscripts

    OPEN_SQUARE  shift, and go to state 26

    $default  reduce using rule 23 (assignable)

    subscripts  go to state 27
    subscript   go to state 28


state 34

   40 expression: OPEN_PAREN . expression CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 49
    term          go to state 39
    identifier    go to state 40


state 35

   39 expression: MINUS_TOK . expression

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 50
    term          go to state 39
    identifier    go to state 40


state 36

   66 term: NUMBER .

    $default  reduce using rule 66 (term)


state 37

   41 expression: functionCall .

    $default  reduce using rule 41 (expression)


state 38

   20 declaration: assignable EQ expression .
   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression

    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 20 (declaration)


state 39

   42 expression: term .

    $default  reduce using rule 42 (expression)


state 40

   28 functionCall: identifier . OPEN_PAREN arguments CLOSE_PAREN
   64 term: identifier .
   65     | identifier . subscripts

    OPEN_PAREN   shift, and go to state 56
    OPEN_SQUARE  shift, and go to state 26

    $default  reduce using rule 64 (term)

    subscripts  go to state 57
    subscript   go to state 28


state 41

   43 functionDefinition: validType functionIdentifier OPEN_PAREN parameters . CLOSE_PAREN body
   48 parameters: parameters . COMMA parameter

    CLOSE_PAREN  shift, and go to state 58
    COMMA        shift, and go to state 47


state 42

   68 index: NUMBER .

    $default  reduce using rule 68 (index)


state 43

   27 subscript: OPEN_SQUARE index . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 59


state 44

   67 index: identifier .

    $default  reduce using rule 67 (index)


state 45

   26 subscripts: subscript subscripts .

    $default  reduce using rule 26 (subscripts)


state 46

    6 mainFunction: validType mainIdentifier OPEN_PAREN parameters CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 34
    OPEN_BRACE  shift, and go to state 60
    MINUS_TOK   shift, and go to state 35
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    IF_TOK      shift, and go to state 61
    WHILE_TOK   shift, and go to state 62
    FOR_TOK     shift, and go to state 63
    RETURN_TOK  shift, and go to state 64

    line                  go to state 65
    declarationStatement  go to state 66
    assignmentStatement   go to state 67
    assignable            go to state 68
    functionCall          go to state 37
    expression            go to state 69
    functionDefinition    go to state 70
    returnStatement       go to state 71
    ifStatement           go to state 72
    loopStatement         go to state 73
    whileStatement        go to state 74
    forStatement          go to state 75
    body                  go to state 76
    term                  go to state 39
    validType             go to state 77
    identifier            go to state 78


state 47

   48 parameters: parameters COMMA . parameter

    VALID_TYPE  shift, and go to state 4

    parameter  go to state 79
    validType  go to state 31


state 48

   50 parameter: validType assignable .

    $default  reduce using rule 50 (parameter)


state 49

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression
   40           | OPEN_PAREN expression . CLOSE_PAREN

    CLOSE_PAREN   shift, and go to state 80
    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55


state 50

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression
   39           | MINUS_TOK expression .

    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 39 (expression)


state 51

   34 expression: expression PLUS_TOK . expression

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 81
    term          go to state 39
    identifier    go to state 40


state 52

   35 expression: expression MINUS_TOK . expression

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 82
    term          go to state 39
    identifier    go to state 40


state 53

   36 expression: expression MULTIPLY_TOK . expression

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 83
    term          go to state 39
    identifier    go to state 40


state 54

   37 expression: expression DIVIDE_TOK . expression

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 84
    term          go to state 39
    identifier    go to state 40


state 55

   38 expression: expression EXPONENT_TOK . expression

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 85
    term          go to state 39
    identifier    go to state 40


state 56

   28 functionCall: identifier OPEN_PAREN . arguments CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    STRING_TOK  shift, and go to state 86

    $default  reduce using rule 31 (arguments)

    functionCall  go to state 37
    arguments     go to state 87
    argument      go to state 88
    expression    go to state 89
    term          go to state 39
    identifier    go to state 40


state 57

   65 term: identifier subscripts .

    $default  reduce using rule 65 (term)


state 58

   43 functionDefinition: validType functionIdentifier OPEN_PAREN parameters CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 34
    OPEN_BRACE  shift, and go to state 60
    MINUS_TOK   shift, and go to state 35
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    IF_TOK      shift, and go to state 61
    WHILE_TOK   shift, and go to state 62
    FOR_TOK     shift, and go to state 63
    RETURN_TOK  shift, and go to state 64

    line                  go to state 65
    declarationStatement  go to state 66
    assignmentStatement   go to state 67
    assignable            go to state 68
    functionCall          go to state 37
    expression            go to state 69
    functionDefinition    go to state 70
    returnStatement       go to state 71
    ifStatement           go to state 72
    loopStatement         go to state 73
    whileStatement        go to state 74
    forStatement          go to state 75
    body                  go to state 90
    term                  go to state 39
    validType             go to state 77
    identifier            go to state 78


state 59

   27 subscript: OPEN_SQUARE index CLOSE_SQUARE .

    $default  reduce using rule 27 (subscript)


state 60

   63 body: OPEN_BRACE . lines CLOSE_BRACE

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    IF_TOK      shift, and go to state 61
    WHILE_TOK   shift, and go to state 62
    FOR_TOK     shift, and go to state 63
    RETURN_TOK  shift, and go to state 64

    lines                 go to state 91
    line                  go to state 92
    declarationStatement  go to state 66
    assignmentStatement   go to state 67
    assignable            go to state 68
    functionCall          go to state 37
    expression            go to state 69
    functionDefinition    go to state 70
    returnStatement       go to state 71
    ifStatement           go to state 72
    loopStatement         go to state 73
    whileStatement        go to state 74
    forStatement          go to state 75
    term                  go to state 39
    validType             go to state 77
    identifier            go to state 78


state 61

   51 ifStatement: IF_TOK . OPEN_PAREN condition CLOSE_PAREN body ELSE_TOK body
   52            | IF_TOK . OPEN_PAREN condition CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 93


state 62

   60 whileStatement: WHILE_TOK . OPEN_PAREN condition CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 94


state 63

   61 forStatement: FOR_TOK . OPEN_PAREN assignmentStatement condition SEMI_COLON assignable EQ expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 95


state 64

   45 returnStatement: RETURN_TOK . expression SEMI_COLON
   46                | RETURN_TOK . SEMI_COLON

    OPEN_PAREN  shift, and go to state 34
    SEMI_COLON  shift, and go to state 96
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 97
    term          go to state 39
    identifier    go to state 40


state 65

   62 body: line .

    $default  reduce using rule 62 (body)


state 66

   10 line: declarationStatement .

    $default  reduce using rule 10 (line)


state 67

   11 line: assignmentStatement .

    $default  reduce using rule 11 (line)


state 68

   22 assignmentStatement: assignable . EQ expression SEMI_COLON

    EQ  shift, and go to state 98


state 69

   12 line: expression . SEMI_COLON
   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression

    SEMI_COLON    shift, and go to state 99
    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55


state 70

   16 line: functionDefinition .

    $default  reduce using rule 16 (line)


state 71

   13 line: returnStatement .

    $default  reduce using rule 13 (line)


state 72

   14 line: ifStatement .

    $default  reduce using rule 14 (line)


state 73

   15 line: loopStatement .

    $default  reduce using rule 15 (line)


state 74

   58 loopStatement: whileStatement .

    $default  reduce using rule 58 (loopStatement)


state 75

   59 loopStatement: forStatement .

    $default  reduce using rule 59 (loopStatement)


state 76

    6 mainFunction: validType mainIdentifier OPEN_PAREN parameters CLOSE_PAREN body .

    $default  reduce using rule 6 (mainFunction)


state 77

   17 declarationStatement: validType . declarations SEMI_COLON
   43 functionDefinition: validType . functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 12

    declarations        go to state 15
    declaration         go to state 16
    assignable          go to state 17
    functionIdentifier  go to state 18
    identifier          go to state 19


state 78

   23 assignable: identifier .
   24           | identifier . subscripts
   28 functionCall: identifier . OPEN_PAREN arguments CLOSE_PAREN
   64 term: identifier .
   65     | identifier . subscripts

    OPEN_PAREN   shift, and go to state 56
    OPEN_SQUARE  shift, and go to state 26

    EQ        reduce using rule 23 (assignable)
    $default  reduce using rule 64 (term)

    subscripts  go to state 100
    subscript   go to state 28


state 79

   48 parameters: parameters COMMA parameter .

    $default  reduce using rule 48 (parameters)


state 80

   40 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 40 (expression)


state 81

   34 expression: expression . PLUS_TOK expression
   34           | expression PLUS_TOK expression .
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression

    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 34 (expression)


state 82

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   35           | expression MINUS_TOK expression .
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression

    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 35 (expression)


state 83

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   36           | expression MULTIPLY_TOK expression .
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression

    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 36 (expression)


state 84

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   37           | expression DIVIDE_TOK expression .
   38           | expression . EXPONENT_TOK expression

    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 37 (expression)


state 85

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression
   38           | expression EXPONENT_TOK expression .

    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 38 (expression)


state 86

   33 argument: STRING_TOK .

    $default  reduce using rule 33 (argument)


state 87

   28 functionCall: identifier OPEN_PAREN arguments . CLOSE_PAREN
   30 arguments: arguments . COMMA argument

    CLOSE_PAREN  shift, and go to state 101
    COMMA        shift, and go to state 102


state 88

   29 arguments: argument .

    $default  reduce using rule 29 (arguments)


state 89

   32 argument: expression .
   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression

    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 32 (argument)


state 90

   43 functionDefinition: validType functionIdentifier OPEN_PAREN parameters CLOSE_PAREN body .

    $default  reduce using rule 43 (functionDefinition)


state 91

    9 lines: lines . line
   63 body: OPEN_BRACE lines . CLOSE_BRACE

    OPEN_PAREN   shift, and go to state 34
    CLOSE_BRACE  shift, and go to state 103
    MINUS_TOK    shift, and go to state 35
    VALID_TYPE   shift, and go to state 4
    IDENTIFIER   shift, and go to state 12
    NUMBER       shift, and go to state 36
    IF_TOK       shift, and go to state 61
    WHILE_TOK    shift, and go to state 62
    FOR_TOK      shift, and go to state 63
    RETURN_TOK   shift, and go to state 64

    line                  go to state 104
    declarationStatement  go to state 66
    assignmentStatement   go to state 67
    assignable            go to state 68
    functionCall          go to state 37
    expression            go to state 69
    functionDefinition    go to state 70
    returnStatement       go to state 71
    ifStatement           go to state 72
    loopStatement         go to state 73
    whileStatement        go to state 74
    forStatement          go to state 75
    term                  go to state 39
    validType             go to state 77
    identifier            go to state 78


state 92

    8 lines: line .

    $default  reduce using rule 8 (lines)


state 93

   51 ifStatement: IF_TOK OPEN_PAREN . condition CLOSE_PAREN body ELSE_TOK body
   52            | IF_TOK OPEN_PAREN . condition CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 105
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    NOT_TOK     shift, and go to state 106

    functionCall  go to state 37
    expression    go to state 107
    condition     go to state 108
    term          go to state 39
    identifier    go to state 40


state 94

   60 whileStatement: WHILE_TOK OPEN_PAREN . condition CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 105
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    NOT_TOK     shift, and go to state 106

    functionCall  go to state 37
    expression    go to state 107
    condition     go to state 109
    term          go to state 39
    identifier    go to state 40


state 95

   61 forStatement: FOR_TOK OPEN_PAREN . assignmentStatement condition SEMI_COLON assignable EQ expression CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 12

    assignmentStatement  go to state 110
    assignable           go to state 68
    identifier           go to state 33


state 96

   46 returnStatement: RETURN_TOK SEMI_COLON .

    $default  reduce using rule 46 (returnStatement)


state 97

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression
   45 returnStatement: RETURN_TOK expression . SEMI_COLON

    SEMI_COLON    shift, and go to state 111
    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55


state 98

   22 assignmentStatement: assignable EQ . expression SEMI_COLON

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 112
    term          go to state 39
    identifier    go to state 40


state 99

   12 line: expression SEMI_COLON .

    $default  reduce using rule 12 (line)


state 100

   24 assignable: identifier subscripts .
   65 term: identifier subscripts .

    EQ        reduce using rule 24 (assignable)
    $default  reduce using rule 65 (term)


state 101

   28 functionCall: identifier OPEN_PAREN arguments CLOSE_PAREN .

    $default  reduce using rule 28 (functionCall)


state 102

   30 arguments: arguments COMMA . argument

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    STRING_TOK  shift, and go to state 86

    functionCall  go to state 37
    argument      go to state 113
    expression    go to state 89
    term          go to state 39
    identifier    go to state 40


state 103

   63 body: OPEN_BRACE lines CLOSE_BRACE .

    $default  reduce using rule 63 (body)


state 104

    9 lines: lines line .

    $default  reduce using rule 9 (lines)


state 105

   40 expression: OPEN_PAREN . expression CLOSE_PAREN
   56 condition: OPEN_PAREN . condition CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 105
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    NOT_TOK     shift, and go to state 106

    functionCall  go to state 37
    expression    go to state 114
    condition     go to state 115
    term          go to state 39
    identifier    go to state 40


state 106

   55 condition: NOT_TOK . condition

    OPEN_PAREN  shift, and go to state 105
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    NOT_TOK     shift, and go to state 106

    functionCall  go to state 37
    expression    go to state 107
    condition     go to state 116
    term          go to state 39
    identifier    go to state 40


state 107

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression
   57 condition: expression . compar expression

    COMPAR        shift, and go to state 117
    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55

    compar  go to state 118


state 108

   51 ifStatement: IF_TOK OPEN_PAREN condition . CLOSE_PAREN body ELSE_TOK body
   52            | IF_TOK OPEN_PAREN condition . CLOSE_PAREN body
   53 condition: condition . SHORT_AND_TOK condition
   54          | condition . SHORT_OR_TOK condition

    CLOSE_PAREN    shift, and go to state 119
    SHORT_AND_TOK  shift, and go to state 120
    SHORT_OR_TOK   shift, and go to state 121


state 109

   53 condition: condition . SHORT_AND_TOK condition
   54          | condition . SHORT_OR_TOK condition
   60 whileStatement: WHILE_TOK OPEN_PAREN condition . CLOSE_PAREN body

    CLOSE_PAREN    shift, and go to state 122
    SHORT_AND_TOK  shift, and go to state 120
    SHORT_OR_TOK   shift, and go to state 121


state 110

   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement . condition SEMI_COLON assignable EQ expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 105
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    NOT_TOK     shift, and go to state 106

    functionCall  go to state 37
    expression    go to state 107
    condition     go to state 123
    term          go to state 39
    identifier    go to state 40


state 111

   45 returnStatement: RETURN_TOK expression SEMI_COLON .

    $default  reduce using rule 45 (returnStatement)


state 112

   22 assignmentStatement: assignable EQ expression . SEMI_COLON
   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression

    SEMI_COLON    shift, and go to state 124
    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55


state 113

   30 arguments: arguments COMMA argument .

    $default  reduce using rule 30 (arguments)


state 114

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression
   40           | OPEN_PAREN expression . CLOSE_PAREN
   57 condition: expression . compar expression

    CLOSE_PAREN   shift, and go to state 80
    COMPAR        shift, and go to state 117
    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55

    compar  go to state 118


state 115

   53 condition: condition . SHORT_AND_TOK condition
   54          | condition . SHORT_OR_TOK condition
   56          | OPEN_PAREN condition . CLOSE_PAREN

    CLOSE_PAREN    shift, and go to state 125
    SHORT_AND_TOK  shift, and go to state 120
    SHORT_OR_TOK   shift, and go to state 121


state 116

   53 condition: condition . SHORT_AND_TOK condition
   54          | condition . SHORT_OR_TOK condition
   55          | NOT_TOK condition .

    $default  reduce using rule 55 (condition)


state 117

   69 compar: COMPAR .

    $default  reduce using rule 69 (compar)


state 118

   57 condition: expression compar . expression

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 126
    term          go to state 39
    identifier    go to state 40


state 119

   51 ifStatement: IF_TOK OPEN_PAREN condition CLOSE_PAREN . body ELSE_TOK body
   52            | IF_TOK OPEN_PAREN condition CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 34
    OPEN_BRACE  shift, and go to state 60
    MINUS_TOK   shift, and go to state 35
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    IF_TOK      shift, and go to state 61
    WHILE_TOK   shift, and go to state 62
    FOR_TOK     shift, and go to state 63
    RETURN_TOK  shift, and go to state 64

    line                  go to state 65
    declarationStatement  go to state 66
    assignmentStatement   go to state 67
    assignable            go to state 68
    functionCall          go to state 37
    expression            go to state 69
    functionDefinition    go to state 70
    returnStatement       go to state 71
    ifStatement           go to state 72
    loopStatement         go to state 73
    whileStatement        go to state 74
    forStatement          go to state 75
    body                  go to state 127
    term                  go to state 39
    validType             go to state 77
    identifier            go to state 78


state 120

   53 condition: condition SHORT_AND_TOK . condition

    OPEN_PAREN  shift, and go to state 105
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    NOT_TOK     shift, and go to state 106

    functionCall  go to state 37
    expression    go to state 107
    condition     go to state 128
    term          go to state 39
    identifier    go to state 40


state 121

   54 condition: condition SHORT_OR_TOK . condition

    OPEN_PAREN  shift, and go to state 105
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    NOT_TOK     shift, and go to state 106

    functionCall  go to state 37
    expression    go to state 107
    condition     go to state 129
    term          go to state 39
    identifier    go to state 40


state 122

   60 whileStatement: WHILE_TOK OPEN_PAREN condition CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 34
    OPEN_BRACE  shift, and go to state 60
    MINUS_TOK   shift, and go to state 35
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    IF_TOK      shift, and go to state 61
    WHILE_TOK   shift, and go to state 62
    FOR_TOK     shift, and go to state 63
    RETURN_TOK  shift, and go to state 64

    line                  go to state 65
    declarationStatement  go to state 66
    assignmentStatement   go to state 67
    assignable            go to state 68
    functionCall          go to state 37
    expression            go to state 69
    functionDefinition    go to state 70
    returnStatement       go to state 71
    ifStatement           go to state 72
    loopStatement         go to state 73
    whileStatement        go to state 74
    forStatement          go to state 75
    body                  go to state 130
    term                  go to state 39
    validType             go to state 77
    identifier            go to state 78


state 123

   53 condition: condition . SHORT_AND_TOK condition
   54          | condition . SHORT_OR_TOK condition
   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement condition . SEMI_COLON assignable EQ expression CLOSE_PAREN body

    SEMI_COLON     shift, and go to state 131
    SHORT_AND_TOK  shift, and go to state 120
    SHORT_OR_TOK   shift, and go to state 121


state 124

   22 assignmentStatement: assignable EQ expression SEMI_COLON .

    $default  reduce using rule 22 (assignmentStatement)


state 125

   56 condition: OPEN_PAREN condition CLOSE_PAREN .

    $default  reduce using rule 56 (condition)


state 126

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression
   57 condition: expression compar expression .

    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55

    $default  reduce using rule 57 (condition)


state 127

   51 ifStatement: IF_TOK OPEN_PAREN condition CLOSE_PAREN body . ELSE_TOK body
   52            | IF_TOK OPEN_PAREN condition CLOSE_PAREN body .

    ELSE_TOK  shift, and go to state 132

    $default  reduce using rule 52 (ifStatement)


state 128

   53 condition: condition . SHORT_AND_TOK condition
   53          | condition SHORT_AND_TOK condition .
   54          | condition . SHORT_OR_TOK condition

    $default  reduce using rule 53 (condition)


state 129

   53 condition: condition . SHORT_AND_TOK condition
   54          | condition . SHORT_OR_TOK condition
   54          | condition SHORT_OR_TOK condition .

    $default  reduce using rule 54 (condition)


state 130

   60 whileStatement: WHILE_TOK OPEN_PAREN condition CLOSE_PAREN body .

    $default  reduce using rule 60 (whileStatement)


state 131

   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement condition SEMI_COLON . assignable EQ expression CLOSE_PAREN body

    IDENTIFIER  shift, and go to state 12

    assignable  go to state 133
    identifier  go to state 33


state 132

   51 ifStatement: IF_TOK OPEN_PAREN condition CLOSE_PAREN body ELSE_TOK . body

    OPEN_PAREN  shift, and go to state 34
    OPEN_BRACE  shift, and go to state 60
    MINUS_TOK   shift, and go to state 35
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    IF_TOK      shift, and go to state 61
    WHILE_TOK   shift, and go to state 62
    FOR_TOK     shift, and go to state 63
    RETURN_TOK  shift, and go to state 64

    line                  go to state 65
    declarationStatement  go to state 66
    assignmentStatement   go to state 67
    assignable            go to state 68
    functionCall          go to state 37
    expression            go to state 69
    functionDefinition    go to state 70
    returnStatement       go to state 71
    ifStatement           go to state 72
    loopStatement         go to state 73
    whileStatement        go to state 74
    forStatement          go to state 75
    body                  go to state 134
    term                  go to state 39
    validType             go to state 77
    identifier            go to state 78


state 133

   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement condition SEMI_COLON assignable . EQ expression CLOSE_PAREN body

    EQ  shift, and go to state 135


state 134

   51 ifStatement: IF_TOK OPEN_PAREN condition CLOSE_PAREN body ELSE_TOK body .

    $default  reduce using rule 51 (ifStatement)


state 135

   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement condition SEMI_COLON assignable EQ . expression CLOSE_PAREN body

    OPEN_PAREN  shift, and go to state 34
    MINUS_TOK   shift, and go to state 35
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36

    functionCall  go to state 37
    expression    go to state 136
    term          go to state 39
    identifier    go to state 40


state 136

   34 expression: expression . PLUS_TOK expression
   35           | expression . MINUS_TOK expression
   36           | expression . MULTIPLY_TOK expression
   37           | expression . DIVIDE_TOK expression
   38           | expression . EXPONENT_TOK expression
   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement condition SEMI_COLON assignable EQ expression . CLOSE_PAREN body

    CLOSE_PAREN   shift, and go to state 137
    PLUS_TOK      shift, and go to state 51
    MINUS_TOK     shift, and go to state 52
    MULTIPLY_TOK  shift, and go to state 53
    DIVIDE_TOK    shift, and go to state 54
    EXPONENT_TOK  shift, and go to state 55


state 137

   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement condition SEMI_COLON assignable EQ expression CLOSE_PAREN . body

    OPEN_PAREN  shift, and go to state 34
    OPEN_BRACE  shift, and go to state 60
    MINUS_TOK   shift, and go to state 35
    VALID_TYPE  shift, and go to state 4
    IDENTIFIER  shift, and go to state 12
    NUMBER      shift, and go to state 36
    IF_TOK      shift, and go to state 61
    WHILE_TOK   shift, and go to state 62
    FOR_TOK     shift, and go to state 63
    RETURN_TOK  shift, and go to state 64

    line                  go to state 65
    declarationStatement  go to state 66
    assignmentStatement   go to state 67
    assignable            go to state 68
    functionCall          go to state 37
    expression            go to state 69
    functionDefinition    go to state 70
    returnStatement       go to state 71
    ifStatement           go to state 72
    loopStatement         go to state 73
    whileStatement        go to state 74
    forStatement          go to state 75
    body                  go to state 138
    term                  go to state 39
    validType             go to state 77
    identifier            go to state 78


state 138

   61 forStatement: FOR_TOK OPEN_PAREN assignmentStatement condition SEMI_COLON assignable EQ expression CLOSE_PAREN body .

    $default  reduce using rule 61 (forStatement)
